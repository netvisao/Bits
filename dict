#!/usr/bin/env python
import sys
import json
import urllib 
import argparse
from HTMLParser import HTMLParser

def main(provider, args):
  """ Entry point """
  if not sys.stdin.isatty():
    for line in sys.stdin:
      args += [line.strip()]

  if not args:
    args = [raw_input("Enter word to search : ")]
  args = map(lambda x: urllib.quote(x.lower()), args)
  
  res = {}
  for word in args:
    url = get_url(provider) % word
    result = json.load(urllib.urlopen(url)) 
    res[word] = extract_definitions(result, provider)
    
  prettyprint(res)

def prettyprint(map):
  """ Pretty prints results """
  parser = HTMLParser()  
  print
  for word in map:
    print "%s:" % parser.unescape(word)
    cnt = 0
    for definition in map[word]:
      cnt += 1
      print "  %d - %s" % (cnt, urllib.unquote(definition).replace('\n',' ').replace('\r',''))
    print   
     
def get_url(provider):
  """ Returns the template url per provider """
  if provider == "urban":
    return 'http://api.urbandictionary.com/v0/define?term=%s'
  elif provider == "globsbe":
    return 'http://glosbe.com/gapi/translate?from=eng&dest=eng&format=json&phrase=%s'
    
def extract_definitions(result, provider):
  """ Extracts the definition from a result JSON """
  if provider == "urban":
    return [ dfn["definition"] for dfn in result["list"] if "definition" in dfn ]
  elif provider == "globsbe":    
    if "tuc" in result and len(result["tuc"]) > 0 and "meanings" in result["tuc"][0]:
      return [ dfn["text"] for dfn in result["tuc"][0]["meanings"] ]
    else: 
      return []
    
if __name__ == '__main__':
  ap = argparse.ArgumentParser(description = 'dictionary lookup')
  ap.add_argument('--urban', '-u', help='use urban dictionary', dest='urban', action='store_true')
  ap.add_argument('words', help='words to lookup', nargs='*')
  args = ap.parse_args()
  main('urban' if args.urban else 'globsbe', args.words)

